# have everything at one place.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bookstore-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: bookstore-app
  template:
    metadata:
      labels:
        app: bookstore-app
    spec:
      containers:
      - name: bookstore-app
        image: boknowswiki/bookstore:v1
        ports:
        - name: web
          containerPort: 2112
        - containerPort: 8888
        - containerPort: 6666
        imagePullPolicy: Always
        securityContext:
          privileged: true
        readinessProbe:
          tcpSocket:
            port: 8888
          initialDelaySeconds: 3
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8888
          initialDelaySeconds: 5
          periodSeconds: 5
        env:
          - name: CONFIG_MONGODB_SERVER
            valueFrom:
              configMapKeyRef:
                name: mongodb-configmap
                key: database_url
---
apiVersion: v1
kind: Service
metadata:
  name: bookstore-service
  labels:
    app: bookstore-service
spec:
  selector:
    app: bookstore-app
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 8888
      targetPort: 8888
      #name: web
---
kind: Service
apiVersion: v1
metadata:
  name: bookstore-app
  labels:
    app: bookstore-app
spec:
  selector:
    app: bookstore-app
  ports:
  - name: web
    port: 2112
---
apiVersion: v1
kind: Service
metadata:
  name: bookstore-service-debug
spec:
  selector:
    app: bookstore
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 6666
      targetPort: 6666
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: bookstore-app
  labels:
    team: frontend
spec:
  selector:
    matchLabels:
      app: bookstore-app
  endpoints:
  - port: web
    interval: 5s
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/metrics
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["get"]
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: default
---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: prometheus
spec:
  serviceAccountName: prometheus
  serviceMonitorSelector:
    matchLabels:
      team: frontend
  resources:
    requests:
      memory: 400Mi
  enableAdminAPI: false
---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: prometheus
spec:
  serviceAccountName: prometheus
  podMonitorSelector:
    matchLabels:
      team: frontend
  resources:
    requests:
      memory: 400Mi
  enableAdminAPI: false
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
spec:
  type: NodePort
  ports:
  - name: web
    nodePort: 30900
    port: 9090
    protocol: TCP
    targetPort: web
  selector:
    prometheus: prometheus
---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: prometheus
spec:
  serviceAccountName: prometheus
  serviceMonitorSelector:
    matchLabels:
      team: frontend
  resources:
    requests:
      memory: 400Mi
  enableAdminAPI: true
